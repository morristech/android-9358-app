repositories {
    jcenter()
    flatDir {
        dirs 'libs'
    }
}


apply plugin: 'com.android.application'



android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    def SERVER_SDCM100 = "\"192.168.1.100:9880\""
    def SERVER_SDCM103 = "\"192.168.1.103:9880\""
    def SERVER_SDCM105 = "\"192.168.1.105:9880\""
    def SERVER_SDCM210 = "\"192.168.1.210:9880\""
    def SERVER_PUBLIC = "\"spa.93wifi.com\""

    defaultConfig {
        applicationId "com.xmd.cashier"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 12
        versionName "1.2.1"

        buildConfigField "String", "SERVER_SDCM100", SERVER_SDCM100
        buildConfigField "String", "SERVER_SDCM103", SERVER_SDCM103
        buildConfigField "String", "SERVER_SDCM105", SERVER_SDCM105
        buildConfigField "String", "SERVER_SDCM210", SERVER_SDCM210
        buildConfigField "String", "SERVER_PUBLIC", SERVER_PUBLIC
    }

    signingConfigs {
        release {
            storeFile file("xmd_app_key.keystore")
            storePassword "XmdAppSignerPass2015"
            keyAlias "xmd-app"
            keyPassword "XmdAppSignerPass2015"
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "SERVER_HOST", SERVER_SDCM100
            buildConfigField "String", "UPDATE_SERVER_HOST", "\"192.168.1.100:9883\""
            buildConfigField "String", "ONLINE_PAY_HOST", "\"test.xiaomodo.com\""
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            buildConfigField "String", "SERVER_HOST", SERVER_PUBLIC
            buildConfigField "String", "UPDATE_SERVER_HOST", "\"service.xiaomodo.com\""
            buildConfigField "String", "ONLINE_PAY_HOST", SERVER_PUBLIC
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    productFlavors {
        phone {
            buildConfigField "String", "POS_TYPE", "\"phone\""
        }
        weipos {
            buildConfigField "String", "POS_TYPE", "\"wei-pos\""
        }
        huipos {
            buildConfigField "String", "POS_TYPE", "\"hui-pos\""
        }
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [umengChannelName: name]
    }

//    applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith("release.apk")) {
//                def alias = "9358-cashier-${variant.productFlavors[0].name}-${defaultConfig.versionName}-${releaseTime()}.apk"
//                output.outputFile = new File(outputFile.parent, alias)
//            }
//        }
//    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile project(':commonlibrary')
    compile(name: 'shidou-updater-1.3', ext: 'aar')
    compile(name: 'shidou-zxinglibrary-1.0', ext: 'aar')
    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.ext.supportLibraryVersion}"
    compile "com.android.support:support-v4:${rootProject.ext.supportLibraryVersion}"
    compile "com.android.support:design:${rootProject.ext.supportLibraryVersion}"
    compile "com.android.support:percent:${rootProject.ext.supportLibraryVersion}"

    compile "org.greenrobot:eventbus:${rootProject.ext.eventbusVersion}"
    compile "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava:${rootProject.ext.retrofitVersion}"
    compile 'io.reactivex:rxandroid:1.2.1'

    compile 'com.google.zxing:core:3.2.1'
    compile 'com.google.zxing:android-core:3.2.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.contrarywind:Android-PickerView:3.2.4'
    weiposCompile files('libs/WeiposSDKII-bin-2.0.jar')
    huiposCompile files('libs/huipos_cashbox_minisdk.jar')
    huiposCompile files('libs/huipos_print.jar')
    //memory leak test
    //    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    //    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    //    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
}

def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getDefault())
}
